base_m <- read_excel(path = ruta, sheet = sheet,
skip = 4,n_max = 29,
col_names = col_names)
# indicadores de ingresos -> earnings
sheet <- 'Ind. Rentabilidad'
col_names <- c('bancos', paste(rep('earnings',7), 1:7, sep = '_'))
base_e <- read_excel(path = ruta,sheet = sheet,
skip = 4,n_max = 29,
col_names = col_names)
# indicadores de liquidez
sheet <- 'Ind. Liquidez'
col_names <- c('bancos', paste(rep('liquidity',6), 1:6, sep = '_'))
base_l <- read_excel(path = ruta,sheet = sheet,
skip = 4,n_max = 29,
col_names = col_names)
# base
base_num <- base_c %>%
left_join(base_a, by = 'bancos') %>%
left_join(base_m, by = 'bancos') %>%
left_join(base_e, by = 'bancos') %>%
left_join(base_l, by = 'bancos') %>%
select_if(is.numeric) %>%
suppressMessages()
base <- select_if(base, is.numeric) + base_num
}
if(length(name_file) > 1 & i == length(name_file) ){
base <- base/length(name_file)
base <- base_c %>%
select_if(is.character) %>%
bind_cols(base)
}
}
}else if(grepl(pattern = 'weight', x = name_file)){
excel <- paste0(name_file, '.xlsx')
if(grepl(pattern = 'cualitativo', x = sheet) %>% isTRUE){
base <- read_excel(excel, sheet = sheet,
skip = 2) %>%
select(bancos, score_cualitativo) %>%
suppressMessages()
}else{
base <- read_excel(excel, sheet = sheet)
}
}else if(file.exists(paste0(name_file, '.xlsx'))){
excel <- paste0(name_file, '.xlsx')
base <- read_excel(excel)
}else{
stop('En nombre del archivo ', name_file, ' no se encuentra')
}
return(base)
}
datos <- function(name_file,
fecha = '0',
sheet = 'cuantitativo'){
# verificamos el ingreso del nombre del archivo
stopifnot(!is.null(name_file))
stopifnot(!is.null(fecha))
# condicion para archivo xls o xlsx
if(length(name_file) >= 1 &
sum(grepl(pattern = 'BM-', x = name_file)) == length(name_file) ){
base <- NULL
for(i in seq_len(length(name_file))){
if(i == 1){
excel <- paste0(name_file[i], '.xls')
archivos <- dir()
pattern <- paste('archivos', fecha[i], sep = '_')
data_file <- archivos[grepl(pattern = pattern, x = archivos)]
ruta <- file.path(getwd(), data_file, excel)
# indicadores de capital
sheet <- 'Ind. Patrimonio'
col_names <- c('bancos',paste(rep('capital',4), 1:4, sep = '_'))
base_c <- read_excel(path = ruta, sheet = sheet,
skip = 4,n_max = 29,
col_names = col_names)
# indicadores de activos -> assets
sheet <- 'Ind. Calidad de Activos'
col_names <- c('bancos',paste(rep('assets',4), 1:4, sep = '_'))
base_a <- read_excel(path = ruta, sheet = sheet,
skip = 4,n_max = 29,
col_names = col_names)
# indicadores de management
sheet <- 'Ind. Gestión'
col_names <- c('bancos',paste(rep('management',7), 1:7, sep = '_'))
base_m <- read_excel(path = ruta, sheet = sheet,
skip = 4,n_max = 29,
col_names = col_names)
# indicadores de ingresos -> earnings
sheet <- 'Ind. Rentabilidad'
col_names <- c('bancos', paste(rep('earnings',7), 1:7, sep = '_'))
base_e <- read_excel(path = ruta,sheet = sheet,
skip = 4,n_max = 29,
col_names = col_names)
# indicadores de liquidez
sheet <- 'Ind. Liquidez'
col_names <- c('bancos', paste(rep('liquidity',6), 1:6, sep = '_'))
base_l <- read_excel(path = ruta,sheet = sheet,
skip = 4,n_max = 29,
col_names = col_names)
# base
base <- base_c %>%
left_join(base_a, by = 'bancos') %>%
left_join(base_m, by = 'bancos') %>%
left_join(base_e, by = 'bancos') %>%
left_join(base_l, by = 'bancos') %>%
suppressMessages()
}else{
excel <- paste0(name_file[i], '.xls')
archivos <- dir()
pattern <- paste('archivos', fecha[i], sep = '_')
data_file <- archivos[grepl(pattern = pattern, x = archivos)]
ruta <- file.path(getwd(), data_file, excel)
# indicadores de capital
sheet <- 'Ind. Patrimonio'
col_names <- c('bancos',paste(rep('capital',4), 1:4, sep = '_'))
base_c <- read_excel(path = ruta, sheet = sheet,
skip = 4,n_max = 29,
col_names = col_names)
# indicadores de activos -> assets
sheet <- 'Ind. Calidad de Activos'
col_names <- c('bancos',paste(rep('assets',4), 1:4, sep = '_'))
base_a <- read_excel(path = ruta, sheet = sheet,
skip = 4,n_max = 29,
col_names = col_names)
# indicadores de management
sheet <- 'Ind. Gestión'
col_names <- c('bancos',paste(rep('management',7), 1:7, sep = '_'))
base_m <- read_excel(path = ruta, sheet = sheet,
skip = 4,n_max = 29,
col_names = col_names)
# indicadores de ingresos -> earnings
sheet <- 'Ind. Rentabilidad'
col_names <- c('bancos', paste(rep('earnings',7), 1:7, sep = '_'))
base_e <- read_excel(path = ruta,sheet = sheet,
skip = 4,n_max = 29,
col_names = col_names)
# indicadores de liquidez
sheet <- 'Ind. Liquidez'
col_names <- c('bancos', paste(rep('liquidity',6), 1:6, sep = '_'))
base_l <- read_excel(path = ruta,sheet = sheet,
skip = 4,n_max = 29,
col_names = col_names)
# base
base_num <- base_c %>%
left_join(base_a, by = 'bancos') %>%
left_join(base_m, by = 'bancos') %>%
left_join(base_e, by = 'bancos') %>%
left_join(base_l, by = 'bancos') %>%
select_if(is.numeric) %>%
suppressMessages()
base <- select_if(base, is.numeric) + base_num
}
if(length(name_file) > 1 & i == length(name_file) ){
base <- base/length(name_file)
base <- base_c %>%
select_if(is.character) %>%
bind_cols(base)
}
}
}else if(grepl(pattern = 'weight', x = name_file)){
excel <- paste0(name_file, '.xlsx')
if(grepl(pattern = 'cualitativo', x = sheet) %>% isTRUE){
base <- read_excel(excel, sheet = sheet,
skip = 2) %>%
select(bancos, score_cualitativo) %>%
suppressMessages()
}else{
base <- read_excel(excel, sheet = sheet)
}
}else if(file.exists(paste0(name_file, '.xlsx'))){
excel <- paste0(name_file, '.xlsx')
base <- read_excel(excel)
}else{
stop('En nombre del archivo ', name_file, ' no se encuentra')
}
return(base)
}
library(tidyverse)
grepl(pattern = '-2020-10', x = 'BM-2020-10')
grepl(pattern = '-2020-10', x = 'resultado.2020-10')
grepl(pattern = '-2020-10', x = c('resultado.2020-10','BM-2020-10'))
paste0('-','2020-10')
grepl(pattern = paste0('-','2020-10'), x = c('resultado.2020-10','BM-2020-10'))
c('resultado.2020-10','BM-2020-10') %>% grepl(pattern = paste0('-','2020-10'))
c('resultado.2020-10','BM-2020-10')[T,F]
c('resultado.2020-10','BM-2020-10')[[T,F]]
c('resultado.2020-10','BM-2020-10')(T,F)
c('resultado.2020-10','BM-2020-10') %>% c(T,F)
c('resultado.2020-10','BM-2020-10') %>% str_extract(T,F)
c('resultado.2020-10','BM-2020-10') %>% str_extract(pattern = c(T,F))
str_subset(string = 'BM-2020-10', pattern = 'BM-')
expect_that(5 * 2, equals(10))
install.packages('testthat')
library(testthat)
expect_that(5 * 2, equals(10))
expect_that(5 * 2, equals(5))
expect_that(mtcars, is_a("data.frame"))
expect_that(mtcars, is_a("matrix"))
getwd()
dir
dir()
install.packages('Rtools')
install.packages("here")
library(here)
setwd()
getwd()
here()
here("ic", "R", "detail.R")
library(readxl)
read_excel('Libro1.xlsx', range = 'Hoja3!A1:C5')
read_excel('Libro1.xlsx', range = 'Hoja3!A1:C5')
read_excel('Libro1.xlsx', range = 'Hoja3!A1:C5', col_names = tolower)
read_excel('Libro1.xlsx', range = 'Hoja3!A1:C5',.name_repair = tolower)
tolower('a')
tolower('A')
!tolower('a')
toupper('a')
read_excel('Libro1.xlsx', range = 'Hoja3!A1:C5',.name_repair = toupper)
read_excel('Libro1.xlsx', range = "Hoja3R1C12:R6C15")
read_excel('Libro1.xlsx', range = "Hoja3!R1C12:R6C15")
read_excel('Libro1.xlsx', range = cell_rows(1:10), sheet = 'Hoja3')
read_excel('Libro1.xlsx', range = anchored("C5", c(3, 4), sheet = 'Hoja3')
read_excel('Libro1.xlsx', range = anchored("C5", c(3, 4)), sheet = 'Hoja3')
read_excel('Libro1.xlsx', range = anchored("C5", c(3, 4)), sheet = 'Hoja3')
read_excel('Libro1.xlsx', range = anchored("C5E5", c(3, 4)), sheet = 'Hoja3')
read_excel('Libro1.xlsx', range = anchored(c("C5",'E5'), c(3, 4)), sheet = 'Hoja3')
read_excel('Libro1.xlsx', range = cell_limits(c(5, 3), c(NA, NA), sheet = 'Hoja3')
read_excel('Libro1.xlsx', range = cell_limits(c(5, 3), c(NA, NA)),
sheet = 'Hoja3')
read_excel('Libro1.xlsx', range = cell_limits(c(5, 3), c(NA, NA)),
sheet = 'Hoja3')
read_excel('Libro1.xlsx', range = cell_limits(c(3, 4), c(NA, NA)),
sheet = 'Hoja3')
read_excel('Libro1.xlsx', range = anchored(c("C5",'E5'), c(3, 4)), sheet = 'Hoja3')
read_excel('Libro1.xlsx', range = anchored(c("C5",'E5'), c(3, 4)), sheet = 'Hoja3')
read_excel('Libro1.xlsx', range = anchored("C5", c(3, 4)), sheet = 'Hoja3')
read_excel('Libro1.xlsx', range = cell_limits(c(5, 3), c(3, 4)),
sheet = 'Hoja3')
read_excel('Libro1.xlsx', range = cell_limits(c(5, 3), c(3, 4)),
sheet = 'Hoja3')
read_excel('Libro1.xlsx', range = cell_limits(c(5, 3), c(NA, NA)),
sheet = 'Hoja3')
read_excel('Libro1.xlsx', range = cell_limits(c(5, 3), c(1, 1)),
sheet = 'Hoja3')
read_excel('Libro1.xlsx', range = cell_limits(c(5, 3), c(7, 3)),
sheet = 'Hoja3')
read_excel('Libro1.xlsx', range = cell_limits(c(5, 3), c(7, 3:4)),
sheet = 'Hoja3')
read_excel('Libro1.xlsx', range = cell_limits(c(5, 3), c(7, 4)),
sheet = 'Hoja3')
read_excel('Libro1.xlsx', range = cell_limits(c(5, 3), c(7, 1)),
sheet = 'Hoja3')
read_excel('Libro1.xlsx', range = cell_limits(c(5, 3), c(7, 7)),
sheet = 'Hoja3')
read_excel('Libro1.xlsx', range = cell_limits(c(1, 3), c(7, 7)),
sheet = 'Hoja3')
wb <- loadWorkbook('Libro1.xlsx')
library(tidyverse)
wb <- loadWorkbook('Libro1.xlsx')
library(xlsx)
wb <- loadWorkbook('Libro1.xlsx')
read_excel('Libro1.xlsx', range = cell_limits(c(1, 3), c(7, 7)),
sheet = 'Hoja3') <- a
read_excel('Libro1.xlsx', range = cell_limits(c(1, 3), c(7, 7)),
sheet = 'Hoja3') -> a
a
library(openxlsx)
writeData(wb = wb, sheet = 'Hoja3', startCol = 1, startRow = 15, x = a, xy = c(1,15))
class(wb)
wb <- loadWorkbook('Libro1.xlsx')
class(wb)
writeData(wb = wb, sheet = 'Hoja3', startCol = 1, startRow = 15, x = a, xy = c(1,15))
writeData(wb = wb, sheet = 'Hoja3', startCol = 1, startRow = 15, x = a, xy = c(1,15))
saveWorkbook(wb,file.path(getwd(), 'Libro1.xlsx'),overwrite = T)
wb <- loadWorkbook('Libro1.xlsx')
writeData(wb = wb, sheet = 'Hoja3', startCol = 1, startRow = 15, x = a, xy = c(1,15))
saveWorkbook(wb,file.path(getwd(), 'Libro1.xlsx'),overwrite = T)
a
library(ic)
ic_result
library(ic)
# caraga de librerias
library(data.table)
# ubicacion del archivo csv que contiene la cartera de creditos
ruta = file.choose()
# carga de cartera de creditos
base <- fread(ruta, dec = ',',
select = c('CEDULA','SALDO_CAPITAL',
'USD','SECCION','GRUPO','TIPO_RIESGO2'),
col.names = c('cedula','saldo_capital',
'usd','seccion','grupo','tipo_riesgo'),
colClasses = c(CEDULA='text',SALDO_CAPITAL='numeric',
USD='numeric',
SECCION='text',GRUPO='text',
TIPO_RIESGO2='text'))
x <- base$tipo_riesgo
unique(X)
unique(x)
BaseFinal <- base %>%
mutate(tipo_credito = ifelse(grepl(pattern = 'UVCC', x = x),
'UVCC',
ifelse(grepl(pattern = 'UVCP', x = x),
'UVCP',
ifelse(grepl(pattern = 'CUOTA.*|PAGARE', x = x),
'PAGARE_CUOTAS',
x) ) ) )
library(dplyr)
unique(x)
BaseFinal <- base %>%
mutate(tipo_credito = ifelse(grepl(pattern = 'UVCC', x = x),
'UVCC',
ifelse(grepl(pattern = 'UVCP', x = x),
'UVCP',
ifelse(grepl(pattern = 'CUOTA.*|PAGARE', x = x),
'PAGARE_CUOTAS',
x) ) ) )
# verificacion
BaseFinal %>%
group_by(tipo_credito, tipo_riesgo) %>%
summarise(n = n())
# resultados
resultados <- ic_result(data = BaseFinal, detail_c = 3)
# export
directorio <- choose.dir()
nombres <- names(resultados)
result(datasets = resultados,
names = nombres,
ruta = directorio,
file.name = 'resultado')
# caraga de librerias
library(data.table)
library(dplyr)
library(ic)
# ubicacion del archivo csv que contiene la cartera de creditos
ruta = file.choose()
# carga de cartera de creditos
base <- fread(ruta, dec = ',',
select = c('CEDULA','SALDO_CAPITAL',
'USD','SECCION','GRUPO','TIPO_RIESGO2'),
col.names = c('cedula','saldo_capital',
'usd','seccion','grupo','tipo_riesgo'),
colClasses = c(CEDULA='text',SALDO_CAPITAL='numeric',
USD='numeric',
SECCION='text',GRUPO='text',
TIPO_RIESGO2='text'))
x <- base$tipo_riesgo
BaseFinal <- base %>%
mutate(tipo_credito = ifelse(grepl(pattern = 'UVCC', x = x),
'UVCC',
ifelse(grepl(pattern = 'UVCP', x = x),
'UVCP',
ifelse(grepl(pattern = 'CUOTA.*|PAGARE', x = x),
'PAGARE_CUOTAS',
x) ) ) )
# verificacion
BaseFinal %>%
group_by(tipo_credito, tipo_riesgo) %>%
summarise(n = n())
BaseFinal <- base %>%
mutate(tipo_credito = ifelse(grepl(pattern = 'CUOTA.*|PAGARE', x = x),
'PAGARE_CUOTAS',
ifelse(grepl(pattern = 'UVCP', x = x),
'UVCP',
ifelse(grepl(pattern = 'UVCC', x = x),
'UVCC',
x) ) ) )
# verificacion
BaseFinal %>%
group_by(tipo_credito, tipo_riesgo) %>%
summarise(n = n())
grepl(pattern = 'UVCC', x = 'CUOTAS UVC  COMERCIAL CAPITAL FIJO')
grepl(pattern = 'UVCC', x = 'CUOTAS UVCC  COMERCIAL CAPITAL FIJO')
# carga de cartera de creditos
base <- fread(ruta, dec = ',',
select = c('CEDULA','SALDO_CAPITAL',
'USD','SECCION','GRUPO','TIPO_RIESGO2'),
col.names = c('cedula','saldo_capital',
'usd','seccion','grupo','tipo_riesgo'),
colClasses = c(CEDULA='text',SALDO_CAPITAL='numeric',
USD='numeric',
SECCION='text',GRUPO='text',
TIPO_RIESGO2='text'))
x <- base$tipo_riesgo
BaseFinal <- base %>%
mutate(tipo_credito = ifelse(grepl(pattern = 'CUOTA|PAGARE', x = x),
'PAGARE_CUOTAS',
ifelse(grepl(pattern = 'UVCP', x = x),
'UVCP',
ifelse(grepl(pattern = 'UVCC|UVC', x = x),
'UVCC',
x) ) ) )
# verificacion
BaseFinal %>%
group_by(tipo_credito, tipo_riesgo) %>%
summarise(n = n())
grepl(pattern = 'CUOTA|PAGARE', x = 'PAGARE')
x <- base$tipo_riesgo
BaseFinal <- base %>%
mutate(tipo_credito = ifelse(grepl(pattern = 'UVCC|UVC', x = x),
'UVCC',
ifelse(grepl(pattern = 'UVCP', x = x),
'UVCP',
ifelse(grepl(pattern = 'CUOTA|PAGARE', x = x),
'PAGARE_CUOTAS',
x) ) ) )
# verificacion
BaseFinal %>%
group_by(tipo_credito, tipo_riesgo) %>%
summarise(n = n())
# caraga de librerias
library(data.table)
library(dplyr)
library(ic)
x <- base$tipo_riesgo
unique(x)
BaseFinal <- base %>%
mutate(tipo_credito = ifelse(grepl(pattern = 'UVCC|UVC', x = x),
'UVCC',
ifelse(grepl(pattern = 'UVCP', x = x),
'UVCP',
ifelse(grepl(pattern = 'CUOTA|PAGARE', x = x),
'PAGARE_CUOTAS',
x) ) ) )
# verificacion
BaseFinal %>%
group_by(tipo_credito, tipo_riesgo) %>%
summarise(n = n())
grepl(pattern = 'UVCC|UVC', x = 'CUOTAS AGRICOLAS UVCP')
grepl(pattern = 'UVCC|[UVC]', x = 'CUOTAS AGRICOLAS UVCP')
grepl(pattern = 'UVCC', x = 'CUOTAS AGRICOLAS UVCP')
grepl(pattern = ['UVCCUVC]', x = 'CUOTAS AGRICOLAS UVCP')
grepl(pattern = '[UVCCUVC]', x = 'CUOTAS AGRICOLAS UVCP')
grepl(pattern = '[UVCC|UVC]', x = 'CUOTAS AGRICOLAS UVCP')
strsplit('CUOTAS AGRICOLAS UVCP', split = ' ')
strsplit('CUOTAS AGRICOLAS UVCP', split = ' ')[[1]]
grepl(pattern = 'UVCC|UVCP', x = strsplit('CUOTAS AGRICOLAS UVCP', split = ' ')[[1]])
any(grepl(pattern = 'UVCC|UVCP', x = strsplit('CUOTAS AGRICOLAS UVCP', split = ' ')[[1]]))
grepl(pattern = 'UVCC|UVCP') %>% strsplit('CUOTAS AGRICOLAS UVCP', split = ' ')
grepl(pattern = 'UVCC|UVCP', x = strsplit('CUOTAS AGRICOLAS UVCP', split = ' ')[[1]]) %>% any()
grepl(pattern = 'UVCC|UVC', x = strsplit('CUOTAS AGRICOLAS UVCP', split = ' ')[[1]]) %>% any()
grepl(pattern = 'UVCC|UVC', x = strsplit('CUOTAS AGRICOLAS UVCP', split = ' ')[[1]])
BaseFinal <- base %>%
mutate(tipo_credito = ifelse(grepl(pattern = 'UVCC', x = x),
'UVCC',
grepl(pattern = 'UVC', x = x),
'UVCC',
ifelse(grepl(pattern = 'UVCP', x = x),
'UVCP',
ifelse(grepl(pattern = 'CUOTA|PAGARE', x = x),
'PAGARE_CUOTAS',
x) ) ) )
BaseFinal <- base %>%
mutate(tipo_credito = ifelse(grepl(pattern = 'UVCC', x = x),
'UVCC',
grepl(pattern = 'UVC', x = x),
'UVCC',
ifelse(grepl(pattern = 'UVCP', x = x),
'UVCP',
ifelse(grepl(pattern = 'CUOTA|PAGARE', x = x),
'PAGARE_CUOTAS',
x) ) ) )
BaseFinal <- base %>%
mutate(tipo_credito = ifelse(grepl(pattern = 'UVCC', x = x),
'UVCC',
ifelse(grepl(pattern = 'UVC', x = x),
'UVCC',
ifelse(grepl(pattern = 'UVCP', x = x),
'UVCP',
ifelse(grepl(pattern = 'CUOTA|PAGARE', x = x),
'PAGARE_CUOTAS',
x) ) ) ) )
# verificacion
BaseFinal %>%
group_by(tipo_credito, tipo_riesgo) %>%
summarise(n = n())
BaseFinal <- base %>%
mutate(tipo_credito = ifelse(grepl(pattern = 'UVCP', x = x),
'UVCP',
ifelse(grepl(pattern = 'UVC', x = x),
'UVCC',
ifelse(grepl(pattern = 'UVCC', x = x),
'UVCC',
ifelse(grepl(pattern = 'CUOTA|PAGARE', x = x),
'PAGARE_CUOTAS',
x) ) ) ) )
# verificacion
BaseFinal %>%
group_by(tipo_credito, tipo_riesgo) %>%
summarise(n = n())
# resultados
resultados <- ic_result(data = BaseFinal, detail_c = 3)
# export
directorio <- choose.dir()
nombres <- names(resultados)
result(datasets = resultados,
names = nombres,
ruta = directorio,
file.name = 'resultado')
library(tidyverse)
library(devtools)
directorio <- choose.dir()
directorio
setwd(directorio)
use_readme_md()
library(testpack)
dir()
file.path(getwd(), 'R', 'fars_functions.R')
library(devtools)
use_travis()
rmarkdown::pandoc_version()
install.packages('Rtools')
library(Rtools)
install.packages('Rtools')
library(Rtools)
